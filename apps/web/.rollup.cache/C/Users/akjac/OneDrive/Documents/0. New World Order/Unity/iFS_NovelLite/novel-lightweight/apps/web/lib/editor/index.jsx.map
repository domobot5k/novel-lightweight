{"version":3,"file":"index.jsx","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useEditor, EditorContent, JSONContent } from \"@tiptap/react\";\r\nimport { defaultEditorProps } from \"./props\";\r\nimport { defaultExtensions } from \"./extensions\";\r\nimport useLocalStorage from \"@/lib/hooks/use-local-storage\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useCompletion } from \"ai/react\";\r\nimport { toast } from \"sonner\";\r\nimport { defaultEditorContent } from \"./default-content\";\r\nimport { EditorBubbleMenu } from \"./bubble-menu\";\r\nimport { getPrevText } from \"@/lib/editor\";\r\nimport { ImageResizer } from \"./extensions/image-resizer\";\r\nimport { EditorProps } from \"@tiptap/pm/view\";\r\nimport { Editor as EditorClass, Extensions } from \"@tiptap/core\";\r\nimport { NovelContext } from \"./provider\";\r\n\r\nexport default function Editor({\r\n  completionApi = \"/api/generate\",\r\n  className = \"novel-relative novel-min-h-[500px] novel-w-full novel-max-w-screen-lg novel-border-stone-200 novel-bg-white sm:novel-mb-[calc(20vh)] sm:novel-rounded-lg sm:novel-border sm:novel-shadow-lg\",\r\n  defaultValue = defaultEditorContent,\r\n  extensions = [],\r\n  editorProps = {},\r\n  onUpdate = () => {},\r\n  onDebouncedUpdate = () => {},\r\n  debounceDuration = 750,\r\n  storageKey = \"novel__content\",\r\n  disableLocalStorage = false,\r\n  handleImageUpload,\r\n}: {\r\n  /**\r\n   * The API route to use for the OpenAI completion API.\r\n   * Defaults to \"/api/generate\".\r\n   */\r\n  completionApi?: string;\r\n  /**\r\n   * Additional classes to add to the editor container.\r\n   * Defaults to \"relative min-h-[500px] w-full max-w-screen-lg border-stone-200 bg-white sm:mb-[calc(20vh)] sm:rounded-lg sm:border sm:shadow-lg\".\r\n   */\r\n  className?: string;\r\n  /**\r\n   * The default value to use for the editor.\r\n   * Defaults to defaultEditorContent.\r\n   */\r\n  defaultValue?: JSONContent | string;\r\n  /**\r\n   * A list of extensions to use for the editor, in addition to the default Novel extensions.\r\n   * Defaults to [].\r\n   */\r\n  extensions?: Extensions;\r\n  /**\r\n   * Props to pass to the underlying Tiptap editor, in addition to the default Novel editor props.\r\n   * Defaults to {}.\r\n   */\r\n  editorProps?: EditorProps;\r\n  /**\r\n   * A callback function that is called whenever the editor is updated.\r\n   * Defaults to () => {}.\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  onUpdate?: (editor?: EditorClass) => void | Promise<void>;\r\n  /**\r\n   * A callback function that is called whenever the editor is updated, but only after the defined debounce duration.\r\n   * Defaults to () => {}.\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  onDebouncedUpdate?: (editor?: EditorClass) => void | Promise<void>;\r\n  /**\r\n   * The duration (in milliseconds) to debounce the onDebouncedUpdate callback.\r\n   * Defaults to 750.\r\n   */\r\n  debounceDuration?: number;\r\n  /**\r\n   * The key to use for storing the editor's value in local storage.\r\n   * Defaults to \"novel__content\".\r\n   */\r\n  storageKey?: string;\r\n  /**\r\n   * Disable local storage read/save.\r\n   * Defaults to false.\r\n   */\r\n  disableLocalStorage?: boolean;\r\n  /**\r\n   * A callback function that is called whenever the user uploads an image.\r\n   * Defaults to undefined.\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  handleImageUpload?: (file: File) => Promise<string>;\r\n}) {\r\n  const [content, setContent] = useLocalStorage(storageKey, defaultValue);\r\n\r\n  const [hydrated, setHydrated] = useState(false);\r\n\r\n  const debouncedUpdates = useDebouncedCallback(async ({ editor }) => {\r\n    const json = editor.getJSON();\r\n    onDebouncedUpdate(editor);\r\n\r\n    if (!disableLocalStorage) {\r\n      setContent(json);\r\n    }\r\n  }, debounceDuration);\r\n\r\n  const editor = useEditor({\r\n    extensions: [...defaultExtensions, ...extensions],\r\n    editorProps: {\r\n      ...defaultEditorProps,\r\n      ...editorProps,\r\n    },\r\n    onUpdate: (e) => {\r\n      const selection = e.editor.state.selection;\r\n      const lastTwo = getPrevText(e.editor, {\r\n        chars: 2,\r\n      });\r\n      if (lastTwo === \"++\" && !isLoading) {\r\n        e.editor.commands.deleteRange({\r\n          from: selection.from - 2,\r\n          to: selection.from,\r\n        });\r\n        complete(\r\n          getPrevText(e.editor, {\r\n            chars: 5000,\r\n          })\r\n        );\r\n        // complete(e.editor.storage.markdown.getMarkdown());\r\n      } else {\r\n        onUpdate(e.editor);\r\n        debouncedUpdates(e);\r\n      }\r\n    },\r\n    autofocus: \"end\",\r\n  });\r\n\r\n  const { complete, completion, isLoading, stop } = useCompletion({\r\n    id: \"novel\",\r\n    api: completionApi,\r\n    onFinish: (_prompt, completion) => {\r\n      editor?.commands.setTextSelection({\r\n        from: editor.state.selection.from - completion.length,\r\n        to: editor.state.selection.from,\r\n      });\r\n    },\r\n    onError: (err) => {\r\n      toast.error(err.message);\r\n    },\r\n  });\r\n\r\n  const prev = useRef(\"\");\r\n\r\n  // Insert chunks of the generated text\r\n  useEffect(() => {\r\n    const diff = completion.slice(prev.current.length);\r\n    prev.current = completion;\r\n    editor?.commands.insertContent(diff);\r\n  }, [isLoading, editor, completion]);\r\n\r\n  useEffect(() => {\r\n    // if user presses escape or cmd + z and it's loading,\r\n    // stop the request, delete the completion, and insert back the \"++\"\r\n    const onKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\" || (e.metaKey && e.key === \"z\")) {\r\n        stop();\r\n        if (e.key === \"Escape\") {\r\n          editor?.commands.deleteRange({\r\n            from: editor.state.selection.from - completion.length,\r\n            to: editor.state.selection.from,\r\n          });\r\n        }\r\n        editor?.commands.insertContent(\"++\");\r\n      }\r\n    };\r\n    const mousedownHandler = (e: MouseEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      stop();\r\n      if (window.confirm(\"AI writing paused. Continue?\")) {\r\n        complete(editor?.getText() || \"\");\r\n      }\r\n    };\r\n    if (isLoading) {\r\n      document.addEventListener(\"keydown\", onKeyDown);\r\n      window.addEventListener(\"mousedown\", mousedownHandler);\r\n    } else {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"mousedown\", mousedownHandler);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"mousedown\", mousedownHandler);\r\n    };\r\n  }, [stop, isLoading, editor, complete, completion.length]);\r\n\r\n  // Default: Hydrate the editor with the content from localStorage.\r\n  // If disableLocalStorage is true, hydrate the editor with the defaultValue.\r\n  useEffect(() => {\r\n    if (!editor || hydrated) return;\r\n\r\n    const value = disableLocalStorage ? defaultValue : content;\r\n\r\n    if (value) {\r\n      editor.commands.setContent(value);\r\n      setHydrated(true);\r\n    }\r\n  }, [editor, defaultValue, content, hydrated, disableLocalStorage]);\r\n\r\n  return (\r\n    <NovelContext.Provider\r\n      value={{\r\n        completionApi,\r\n        handleUserImageUpload: handleImageUpload,\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          editor?.chain().focus().run();\r\n        }}\r\n        className={className}\r\n      >\r\n        {editor && <EditorBubbleMenu editor={editor} />}\r\n        {editor?.isActive(\"image\") && <ImageResizer editor={editor} />}\r\n        <EditorContent editor={editor} />\r\n      </div>\r\n    </NovelContext.Provider>\r\n  );\r\n}\r\n"]}