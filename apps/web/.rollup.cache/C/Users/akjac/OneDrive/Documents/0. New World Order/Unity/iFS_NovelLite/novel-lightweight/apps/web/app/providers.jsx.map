{"version":3,"file":"providers.jsx","sourceRoot":"","sources":["providers.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EAAuC,aAAa,EAAE,MAAM,OAAO,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,eAAe,MAAM,+BAA+B,CAAC;AAE5D,MAAM,CAAC,MAAM,UAAU,GAAG,aAAa,CAGpC;IACD,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC;CAClB,CAAC,CAAC;AAEH,MAAM,eAAe,GAAG,GAAG,EAAE;IAC3B,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,EAEzB,CAAC;IACF,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;AACnC,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,SAAS,CAAC,EAAE,QAAQ,EAA2B;IACrE,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,eAAe,CAAS,aAAa,EAAE,SAAS,CAAC,CAAC;IAE1E,OAAO,CACL,CAAC,aAAa,CACZ,SAAS,CAAC,OAAO,CACjB,KAAK,CAAC,CAAC;YACL,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,YAAY;SACnB,CAAC,CAEF;MAAA,CAAC,UAAU,CAAC,QAAQ,CAClB,KAAK,CAAC,CAAC;YACL,IAAI;YACJ,OAAO;SACR,CAAC,CAEF;QAAA,CAAC,eAAe,CAAC,AAAD,EAChB;QAAA,CAAC,QAAQ,CACT;QAAA,CAAC,SAAS,CAAC,AAAD,EACZ;MAAA,EAAE,UAAU,CAAC,QAAQ,CACvB;IAAA,EAAE,aAAa,CAAC,CACjB,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\r\n\r\nimport { Dispatch, ReactNode, SetStateAction, createContext } from \"react\";\r\nimport { ThemeProvider, useTheme } from \"next-themes\";\r\nimport { Toaster } from \"sonner\";\r\nimport { Analytics } from \"@vercel/analytics/react\";\r\nimport useLocalStorage from \"@/lib/hooks/use-local-storage\";\r\n\r\nexport const AppContext = createContext<{\r\n  font: string;\r\n  setFont: Dispatch<SetStateAction<string>>;\r\n}>({\r\n  font: \"Default\",\r\n  setFont: () => {},\r\n});\r\n\r\nconst ToasterProvider = () => {\r\n  const { theme } = useTheme() as {\r\n    theme: \"light\" | \"dark\" | \"system\";\r\n  };\r\n  return <Toaster theme={theme} />;\r\n};\r\n\r\nexport default function Providers({ children }: { children: ReactNode }) {\r\n  const [font, setFont] = useLocalStorage<string>(\"novel__font\", \"Default\");\r\n\r\n  return (\r\n    <ThemeProvider\r\n      attribute=\"class\"\r\n      value={{\r\n        light: \"light-theme\",\r\n        dark: \"dark-theme\",\r\n      }}\r\n    >\r\n      <AppContext.Provider\r\n        value={{\r\n          font,\r\n          setFont,\r\n        }}\r\n      >\r\n        <ToasterProvider />\r\n        {children}\r\n        <Analytics />\r\n      </AppContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]}