{"version":3,"file":"upload-images.jsx","sourceRoot":"","sources":["upload-images.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlobResult } from \"@vercel/blob\";\r\nimport { toast } from \"sonner\";\r\nimport { EditorState, Plugin, PluginKey } from \"@tiptap/pm/state\";\r\nimport { Decoration, DecorationSet, EditorView } from \"@tiptap/pm/view\";\r\n\r\nconst uploadKey = new PluginKey(\"upload-image\");\r\n\r\nconst UploadImagesPlugin = () =>\r\n  new Plugin({\r\n    key: uploadKey,\r\n    state: {\r\n      init() {\r\n        return DecorationSet.empty;\r\n      },\r\n      apply(tr, set) {\r\n        set = set.map(tr.mapping, tr.doc);\r\n        // See if the transaction adds or removes any placeholders\r\n        const action = tr.getMeta(this);\r\n        if (action && action.add) {\r\n          const { id, pos, src } = action.add;\r\n\r\n          const placeholder = document.createElement(\"div\");\r\n          placeholder.setAttribute(\"class\", \"img-placeholder\");\r\n          const image = document.createElement(\"img\");\r\n          image.setAttribute(\r\n            \"class\",\r\n            \"opacity-40 rounded-lg border border-stone-200\"\r\n          );\r\n          image.src = src;\r\n          placeholder.appendChild(image);\r\n          const deco = Decoration.widget(pos + 1, placeholder, {\r\n            id,\r\n          });\r\n          set = set.add(tr.doc, [deco]);\r\n        } else if (action && action.remove) {\r\n          set = set.remove(\r\n            set.find(null, null, (spec) => spec.id == action.remove.id)\r\n          );\r\n        }\r\n        return set;\r\n      },\r\n    },\r\n    props: {\r\n      decorations(state) {\r\n        return this.getState(state);\r\n      },\r\n    },\r\n  });\r\n\r\nexport default UploadImagesPlugin;\r\n\r\nfunction findPlaceholder(state: EditorState, id: {}) {\r\n  const decos = uploadKey.getState(state);\r\n  const found = decos.find(null, null, (spec) => spec.id == id);\r\n  return found.length ? found[0].from : null;\r\n}\r\n\r\nexport function startImageUpload(\r\n  file: File,\r\n  view: EditorView,\r\n  pos: number,\r\n  // eslint-disable-next-line no-unused-vars\r\n  handleUserImageUpload?: (file: File) => Promise<string | File>\r\n) {\r\n  // check if the file is an image\r\n  if (!file.type.includes(\"image/\")) {\r\n    toast.error(\"File type not supported.\");\r\n    return;\r\n\r\n    // check if the file size is less than 20MB\r\n  } else if (file.size / 1024 / 1024 > 20) {\r\n    toast.error(\"File size too big (max 20MB).\");\r\n    return;\r\n  }\r\n\r\n  // A fresh object to act as the ID for this upload\r\n  const id = {};\r\n\r\n  // Replace the selection with a placeholder\r\n  const tr = view.state.tr;\r\n  if (!tr.selection.empty) tr.deleteSelection();\r\n\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n  reader.onload = () => {\r\n    tr.setMeta(uploadKey, {\r\n      add: {\r\n        id,\r\n        pos,\r\n        src: reader.result,\r\n      },\r\n    });\r\n    view.dispatch(tr);\r\n  };\r\n\r\n  if (handleUserImageUpload) {\r\n    CustomUploaderWrapper(file, handleUserImageUpload).then((src) => {\r\n      const { schema } = view.state;\r\n\r\n      let pos = findPlaceholder(view.state, id);\r\n      // If the content around the placeholder has been deleted, drop\r\n      // the image\r\n      if (pos == null) return;\r\n\r\n      // Otherwise, insert it at the placeholder's position, and remove\r\n      // the placeholder\r\n      const imageSrc = src;\r\n\r\n      const node = schema.nodes.image.create({ src: imageSrc });\r\n      const transaction = view.state.tr\r\n        .replaceWith(pos, pos, node)\r\n        .setMeta(uploadKey, { remove: { id } });\r\n      view.dispatch(transaction);\r\n    });\r\n  } else {\r\n    handleImageUpload(file).then((src) => {\r\n      const { schema } = view.state;\r\n\r\n      let pos = findPlaceholder(view.state, id);\r\n      // If the content around the placeholder has been deleted, drop\r\n      // the image\r\n      if (pos == null) return;\r\n\r\n      // Otherwise, insert it at the placeholder's position, and remove\r\n      // the placeholder\r\n\r\n      // When BLOB_READ_WRITE_TOKEN is not valid or unavailable, read\r\n      // the image locally\r\n      const imageSrc = typeof src === \"object\" ? reader.result : src;\r\n\r\n      const node = schema.nodes.image.create({ src: imageSrc });\r\n      const transaction = view.state.tr\r\n        .replaceWith(pos, pos, node)\r\n        .setMeta(uploadKey, { remove: { id } });\r\n      view.dispatch(transaction);\r\n    });\r\n  }\r\n}\r\n\r\nexport const CustomUploaderWrapper = (\r\n  file: File,\r\n  // eslint-disable-next-line no-unused-vars\r\n  handleUserImageUpload: (file: File) => Promise<string | File>\r\n) => {\r\n  return new Promise((resolve) => {\r\n    toast.promise(\r\n      handleUserImageUpload(file).then((src) => {\r\n        if (typeof src === \"string\") {\r\n          let image = new Image();\r\n          image.src = src;\r\n          image.onload = () => {\r\n            resolve(src);\r\n          };\r\n        }\r\n      }),\r\n      {\r\n        loading: \"Uploading image...\",\r\n        success: \"Image uploaded successfully.\",\r\n        error: (e) => e.message,\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\nexport const handleImageUpload = (file: File): Promise<string | File> => {\r\n  // upload to Vercel Blob\r\n  return new Promise((resolve) => {\r\n    toast.promise(\r\n      fetch(\"/api/upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": file?.type || \"application/octet-stream\",\r\n          \"x-vercel-filename\": file?.name || \"image.png\",\r\n        },\r\n        body: file,\r\n      }).then(async (res) => {\r\n        // Successfully uploaded image\r\n        if (res.status === 200) {\r\n          const { url } = (await res.json()) as BlobResult;\r\n          // preload the image\r\n          let image = new Image();\r\n          image.src = url;\r\n          image.onload = () => {\r\n            resolve(url);\r\n          };\r\n          // No blob store configured\r\n        } else if (res.status === 401) {\r\n          resolve(file);\r\n\r\n          throw new Error(\r\n            \"`BLOB_READ_WRITE_TOKEN` environment variable not found, reading image locally instead.\"\r\n          );\r\n          // Unknown error\r\n        } else {\r\n          throw new Error(`Error uploading image. Please try again.`);\r\n        }\r\n      }),\r\n      {\r\n        loading: \"Uploading image...\",\r\n        success: \"Image uploaded successfully.\",\r\n        error: (e) => e.message,\r\n      }\r\n    );\r\n  });\r\n};\r\n"]}