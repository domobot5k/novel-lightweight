{"version":3,"file":"color-selector.jsx","sourceRoot":"","sources":["color-selector.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Editor } from \"@tiptap/core\";\r\nimport { Check, ChevronDown } from \"lucide-react\";\r\nimport { Dispatch, FC, SetStateAction } from \"react\";\r\nimport * as Popover from \"@radix-ui/react-popover\";\r\n\r\nexport interface BubbleColorMenuItem {\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\ninterface ColorSelectorProps {\r\n  editor: Editor;\r\n  isOpen: boolean;\r\n  setIsOpen: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst TEXT_COLORS: BubbleColorMenuItem[] = [\r\n  {\r\n    name: \"Default\",\r\n    color: \"var(--novel-black)\",\r\n  },\r\n  {\r\n    name: \"Purple\",\r\n    color: \"#9333EA\",\r\n  },\r\n  {\r\n    name: \"Red\",\r\n    color: \"#E00000\",\r\n  },\r\n  {\r\n    name: \"Yellow\",\r\n    color: \"#EAB308\",\r\n  },\r\n  {\r\n    name: \"Blue\",\r\n    color: \"#2563EB\",\r\n  },\r\n  {\r\n    name: \"Green\",\r\n    color: \"#008A00\",\r\n  },\r\n  {\r\n    name: \"Orange\",\r\n    color: \"#FFA500\",\r\n  },\r\n  {\r\n    name: \"Pink\",\r\n    color: \"#BA4081\",\r\n  },\r\n  {\r\n    name: \"Gray\",\r\n    color: \"#A8A29E\",\r\n  },\r\n];\r\n\r\nconst HIGHLIGHT_COLORS: BubbleColorMenuItem[] = [\r\n  {\r\n    name: \"Default\",\r\n    color: \"var(--novel-highlight-default)\",\r\n  },\r\n  {\r\n    name: \"Purple\",\r\n    color: \"var(--novel-highlight-purple)\",\r\n  },\r\n  {\r\n    name: \"Red\",\r\n    color: \"var(--novel-highlight-red)\",\r\n  },\r\n  {\r\n    name: \"Yellow\",\r\n    color: \"var(--novel-highlight-yellow)\",\r\n  },\r\n  {\r\n    name: \"Blue\",\r\n    color: \"var(--novel-highlight-blue)\",\r\n  },\r\n  {\r\n    name: \"Green\",\r\n    color: \"var(--novel-highlight-green)\",\r\n  },\r\n  {\r\n    name: \"Orange\",\r\n    color: \"var(--novel-highlight-orange)\",\r\n  },\r\n  {\r\n    name: \"Pink\",\r\n    color: \"var(--novel-highlight-pink)\",\r\n  },\r\n  {\r\n    name: \"Gray\",\r\n    color: \"var(--novel-highlight-gray)\",\r\n  },\r\n];\r\n\r\nexport const ColorSelector: FC<ColorSelectorProps> = ({\r\n  editor,\r\n  isOpen,\r\n  setIsOpen,\r\n}) => {\r\n  const activeColorItem = TEXT_COLORS.find(({ color }) =>\r\n    editor.isActive(\"textStyle\", { color })\r\n  );\r\n\r\n  const activeHighlightItem = HIGHLIGHT_COLORS.find(({ color }) =>\r\n    editor.isActive(\"highlight\", { color })\r\n  );\r\n\r\n  return (\r\n    <Popover.Root open={isOpen}>\r\n      <div className=\"novel-relative novel-h-full\">\r\n        <Popover.Trigger\r\n          className=\"novel-flex novel-h-full novel-items-center novel-gap-1 novel-p-2 novel-text-sm novel-font-medium novel-text-stone-600 hover:novel-bg-stone-100 active:novel-bg-stone-200\"\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        >\r\n          <span\r\n            className=\"novel-rounded-sm novel-px-1\"\r\n            style={{\r\n              color: activeColorItem?.color,\r\n              backgroundColor: activeHighlightItem?.color,\r\n            }}\r\n          >\r\n            A\r\n          </span>\r\n\r\n          <ChevronDown className=\"novel-h-4 novel-w-4\" />\r\n        </Popover.Trigger>\r\n\r\n        <Popover.Content\r\n          align=\"start\"\r\n          className=\"novel-z-[99999] novel-my-1 novel-flex novel-max-h-80 novel-w-48 novel-flex-col novel-overflow-hidden novel-overflow-y-auto novel-rounded novel-border novel-border-stone-200 novel-bg-white novel-p-1 novel-shadow-xl novel-animate-in novel-fade-in novel-slide-in-from-top-1\"\r\n        >\r\n          <div className=\"novel-my-1 novel-px-2 novel-text-sm novel-text-stone-500\">\r\n            Color\r\n          </div>\r\n          {TEXT_COLORS.map(({ name, color }, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => {\r\n                editor.commands.unsetColor();\r\n                name !== \"Default\" &&\r\n                  editor\r\n                    .chain()\r\n                    .focus()\r\n                    .setColor(color || \"\")\r\n                    .run();\r\n                setIsOpen(false);\r\n              }}\r\n              className=\"novel-flex novel-items-center novel-justify-between novel-rounded-sm novel-px-2 novel-py-1 novel-text-sm novel-text-stone-600 hover:novel-bg-stone-100\"\r\n              type=\"button\"\r\n            >\r\n              <div className=\"novel-flex novel-items-center novel-space-x-2\">\r\n                <div\r\n                  className=\"novel-rounded-sm novel-border novel-border-stone-200 novel-px-1 novel-py-px novel-font-medium\"\r\n                  style={{ color }}\r\n                >\r\n                  A\r\n                </div>\r\n                <span>{name}</span>\r\n              </div>\r\n              {editor.isActive(\"textStyle\", { color }) && (\r\n                <Check className=\"novel-h-4 novel-w-4\" />\r\n              )}\r\n            </button>\r\n          ))}\r\n\r\n          <div className=\"novel-mb-1 novel-mt-2 novel-px-2 novel-text-sm novel-text-stone-500\">\r\n            Background\r\n          </div>\r\n\r\n          {HIGHLIGHT_COLORS.map(({ name, color }, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => {\r\n                editor.commands.unsetHighlight();\r\n                name !== \"Default\" && editor.commands.setHighlight({ color });\r\n                setIsOpen(false);\r\n              }}\r\n              className=\"novel-flex novel-items-center novel-justify-between novel-rounded-sm novel-px-2 novel-py-1 novel-text-sm novel-text-stone-600 hover:novel-bg-stone-100\"\r\n              type=\"button\"\r\n            >\r\n              <div className=\"novel-flex novel-items-center novel-space-x-2\">\r\n                <div\r\n                  className=\"novel-rounded-sm novel-border novel-border-stone-200 novel-px-1 novel-py-px novel-font-medium\"\r\n                  style={{ backgroundColor: color }}\r\n                >\r\n                  A\r\n                </div>\r\n                <span>{name}</span>\r\n              </div>\r\n              {editor.isActive(\"highlight\", { color }) && (\r\n                <Check className=\"novel-h-4 novel-w-4\" />\r\n              )}\r\n            </button>\r\n          ))}\r\n        </Popover.Content>\r\n      </div>\r\n    </Popover.Root>\r\n  );\r\n};\r\n"]}