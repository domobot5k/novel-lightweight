{"version":3,"file":"menu.jsx","sourceRoot":"","sources":["menu.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EACL,OAAO,EACP,cAAc,EACd,cAAc,GACf,MAAM,yBAAyB,CAAC;AACjC,sCAAsC;AACtC,iDAAiD;AACjD,iEAAiE;AACjE,OAAO,EAAE,KAAK,EAAE,IAAI,IAAI,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAC9E,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,kBAAkB;AAClB,MAAM;AACN,uBAAuB;AACvB,iDAAiD;AACjD,OAAO;AACP,MAAM;AACN,qBAAqB;AACrB,+CAA+C;AAC/C,OAAO;AACP,MAAM;AACN,oBAAoB;AACpB,8CAA8C;AAC9C,OAAO;AACP,KAAK;AACL,MAAM,WAAW,GAAG;IAClB;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAG;KACtC;IACD;QACE,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAG;KACrC;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAG;KACnC;CACF,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,IAAI;IAC1B,iEAAiE;IACjE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,QAAQ,EAAE,CAAC;IAErD,OAAO,CACL,CAAC,OAAO,CACN;MAAA,CAAC,cAAc,CAAC,SAAS,CAAC,kLAAkL,CAC1M;QAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EACjD;MAAA,EAAE,cAAc,CAChB;MAAA,CAAC,cAAc,CAAC,SAAS,CAAC,gCAAgC,CAAC,KAAK,CAAC,KAAK,CACpE;QAAA,CAAC;;;;;;;;;;;;;;;;;;;iBAmBQ,CACT;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAClB;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,wCAAwC,CAAC,UAAU,EAAE,CAAC,CACnE;UAAA,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACpC,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,SAAS,CAAC,wGAAwG,CAClH,OAAO,CAAC,CAAC,GAAG,EAAE;gBACZ,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC,CAEF;cAAA,CAAC,GAAG,CAAC,SAAS,CAAC,6BAA6B,CAC1C;gBAAA,CAAC,GAAG,CAAC,SAAS,CAAC,wCAAwC,CACrD;kBAAA,CAAC,IAAI,CACP;gBAAA,EAAE,GAAG,CACL;gBAAA,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,CACrB;cAAA,EAAE,GAAG,CACL;cAAA,CAAC,YAAY,KAAK,KAAK,CAAC,WAAW,EAAE,IAAI,CACvC,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAG,CAC9B,CACH;YAAA,EAAE,MAAM,CAAC,CACV,CAAC,CACJ;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,cAAc,CAClB;IAAA,EAAE,OAAO,CAAC,CACX,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n} from \"@/ui/primitives/popover\";\r\n// import { useContext } from \"react\";\r\n// import { AppContext } from \"../app/providers\";\r\n// import { FontDefault, FontSerif, FontMono } from \"@/ui/icons\";\r\nimport { Check, Menu as MenuIcon, Monitor, Moon, SunDim } from \"lucide-react\";\r\nimport { useTheme } from \"next-themes\";\r\n\r\n// const fonts = [\r\n//   {\r\n//     font: \"Default\",\r\n//     icon: <FontDefault className=\"h-4 w-4\" />,\r\n//   },\r\n//   {\r\n//     font: \"Serif\",\r\n//     icon: <FontSerif className=\"h-4 w-4\" />,\r\n//   },\r\n//   {\r\n//     font: \"Mono\",\r\n//     icon: <FontMono className=\"h-4 w-4\" />,\r\n//   },\r\n// ];\r\nconst appearances = [\r\n  {\r\n    theme: \"System\",\r\n    icon: <Monitor className=\"h-4 w-4\" />,\r\n  },\r\n  {\r\n    theme: \"Light\",\r\n    icon: <SunDim className=\"h-4 w-4\" />,\r\n  },\r\n  {\r\n    theme: \"Dark\",\r\n    icon: <Moon className=\"h-4 w-4\" />,\r\n  },\r\n];\r\n\r\nexport default function Menu() {\r\n  // const { font: currentFont, setFont } = useContext(AppContext);\r\n  const { theme: currentTheme, setTheme } = useTheme();\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger className=\"absolute bottom-5 right-5 z-10 flex h-8 w-8 items-center justify-center rounded-lg transition-colors duration-200 hover:bg-stone-100 active:bg-stone-200 sm:bottom-auto sm:top-5\">\r\n        <MenuIcon className=\"text-stone-600\" width={16} />\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-52 divide-y divide-stone-200\" align=\"end\">\r\n        {/* <div className=\"p-2\">\r\n          <p className=\"p-2 text-xs font-medium text-stone-500\">Font</p>\r\n          {fonts.map(({ font, icon }) => (\r\n            <button\r\n              key={font}\r\n              className=\"flex w-full items-center justify-between rounded px-2 py-1 text-sm text-stone-600 hover:bg-stone-100\"\r\n              onClick={() => {\r\n                setFont(font);\r\n              }}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"rounded-sm border border-stone-200 p-1\">\r\n                  {icon}\r\n                </div>\r\n                <span>{font}</span>\r\n              </div>\r\n              {currentFont === font && <Check className=\"h-4 w-4\" />}\r\n            </button>\r\n          ))}\r\n        </div> */}\r\n        <div className=\"p-2\">\r\n          <p className=\"p-2 text-xs font-medium text-stone-500\">Appearance</p>\r\n          {appearances.map(({ theme, icon }) => (\r\n            <button\r\n              key={theme}\r\n              className=\"flex w-full items-center justify-between rounded px-2 py-1.5 text-sm text-stone-600 hover:bg-stone-100\"\r\n              onClick={() => {\r\n                setTheme(theme.toLowerCase());\r\n              }}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"rounded-sm border border-stone-200 p-1\">\r\n                  {icon}\r\n                </div>\r\n                <span>{theme}</span>\r\n              </div>\r\n              {currentTheme === theme.toLowerCase() && (\r\n                <Check className=\"h-4 w-4\" />\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n"]}